"use strict";$(function(){$(".header");var t=$(".navbar-toggle"),a=$(".navbar-brand"),s="navbar-toggle--active",o=$(".header-heading"),i=$(".header-paragraph"),l=$(".header-icon"),n=$(".navbar-nav"),r=$(".navbar-link"),c=$(".navbar-item"),h=$(".navbar-item-list");r.on("click",function(e){e.preventDefault(),$(this).siblings(h).fadeToggle(500)});var u=new TimelineLite,f=$(".loading"),p=$(".loading-object");$(window).on("load",function(){p.fadeOut(0,function(){f.addClass("loading--active"),u.to(f,2,{display:"none"}).add("buttonToggle").fromTo(t,2,{autoAlpha:0,x:200},{autoAlpha:1,x:0,ease:Power4.easeInOut}).fromTo(a,2,{autoAlpha:0,x:-200},{autoAlpha:1,x:0,ease:Power4.easeInOut},"buttonToggle").from(o,2,{autoAlpha:0,y:100,ease:Power1.ease}).from(i,2,{autoAlpha:0,y:100,ease:Power1.ease}).to(l,2,{css:{className:"+=header--icon"}})})}),t.on("click",function(){$(this).toggleClass(s).end(),n.fadeToggle(500),$(this).not().hasClass(s)&&h.fadeOut(0),$(window).width()<=900&&$(this).not().hasClass(s)&&u.staggerFromTo(c,2,{autoAlpha:0,x:200},{autoAlpha:1,x:0,ease:Power3.ease},.2)});var d=$(".our-work-button"),v=$(".pop-up"),b=v.find("iframe"),g=($(".pop-up-box"),$(".pop-up-icon"));d.on("click",function(e){e.preventDefault(),v.fadeIn(200);var t=$(this).attr("href")+"?autoplay=1";b.attr("src",t),v.on("click",function(){$(this).fadeOut(200),b.attr("src","")}),$(document).keydown(function(e){27!=e.keyCode&&27!=e.which||(v.fadeOut(200),b.attr("src",""))}),g.on("click",function(e){e.preventDefault(),v.fadeOut(200)})}),$("body, html").niceScroll({cursorwidth:"5px",cursorborder:"1px solid #ffffff5e",cursorcolor:"#cc5a35",cursorborderradius:0,scrollspeed:300,horizrailenabled:!1}),l.on("click",function(){$("html, body").animate({scrollTop:$("."+$(this).data("target")).offset().top},2e3)});var m=$(".information-content-head"),C=$(".information");$(window).scroll(function(){var e=C.offset().top-200;$(this).scrollTop()>=e&&m.each(function(){$(this).attr("counter",0).animate({counter:$(this).data("counter")},{duration:4e3,easing:"swing",step:function(e){$(this).text(Math.ceil(e)+"+")}})})});var w=$(".faq-box-questions-question"),y=$(".faq-box-questions-result"),k=$(".faq-box-questions-box"),x="fa-plus-circle",U="fa-minus-circle";function q(e){e.each(function(){$(this).siblings(y).is(":visible")&&$(this).find("i").toggleClass(U+" "+x)})}w.on("click",function(){$(this).each(function(){$(this).siblings(y).slideToggle(500),$(this).each(function(){$(this).parent(k).siblings().find(y).is(":visible")&&($(this).parent(k).siblings().find(y).slideUp(500),$(this).parent(k).siblings().find("i").removeClass(U).addClass(x))}),q($(this))})}),q(w);$(".featured-works-gallary-control");var A=$(".featured-works-item-control"),D=$(".featured-works-gallary > *");A.on("click",function(){$(this).addClass("active").siblings().removeClass("active");var e=$("."+$(this).data("gallary"));D.filter(function(){$(this).is(e)?$(this).css("opacity",1):$(this).css("opacity",0)})});var O=$(".featured-works-overlay-content > i"),T=$(".popup-image"),I=$(".popup-image-box");function V(){I.animate({top:"-500%",opacity:0},{duration:1e3,easing:"swing",complete:function(){T.css("transform","scale(0)"),I.empty(),$(R).fadeIn().css("display","flex")}})}O.on("click",function(){T.css("transform","scale(1)"),I.animate({top:0,opacity:1},{duration:1500,easing:"swing"}).delay(1e3),$(this).each(function(){var e=$(this).parents(".featured-works-gallary-box").children("img").attr("src");$("<img>").attr("src",e).appendTo(I)}),$(R).fadeOut()}),T.on("click","i",V),$(window).keydown(function(e){(27===e.keyCode||27===e.which)&&V()});var P=$(".say-clients"),E=($("#slider"),$(".say-clients-item")),L=$(".say-clients-arrow"),S=$(".say-clients-arrow--prev"),Y=$(".say-clients-arrow--next"),F="active-item";function j(e,t){$(".say-clients-item:first-child").hasClass(F)?($(S).hide(),$(Y).show()):($(".say-clients-item:last-child").hasClass(F)?$(Y).hide():$(Y).show(),$(S).show())}$(".active-item").show(),j(),L.on("click",function(){$(this).each(function(){$(this).is(Y)?$("."+F).fadeOut(0).removeClass(F).next().addClass(F).fadeIn(500):$(this).is(S)&&$("."+F).fadeOut(0).removeClass(F).prev().addClass(F).fadeIn(500),j()})});var z=!0;setInterval(function(){z&&($(E).is(".active-item:last-child")?($(E).fadeOut(0).removeClass(F),$(E).first().addClass(F).fadeIn()):$("."+F).fadeOut(0).removeClass(F).next().addClass(F).fadeIn(),j())},4e3),P.on({mouseenter:function(){z=!1},mouseleave:function(){z=!0}});var B=$(".pricing-tables-control"),M=$(".pricing-tables-control-item"),N=$(".pricing-tables-box > *");B.append('<span class="pricing-tables-control-active"></span>'),M.on("click",function(){$(this).each(function(){$(".pricing-tables-control-active").animate({left:$(this).position().left},500)})}),$(".monthly-price").show(),M.on("click",function(){var e="."+$(this).data("toggle");N.filter(function(){$(this).is(e)?$(this).fadeIn(100):$(this).fadeOut(0)})});var G=$(".news-articles-btn"),H=".news-articles-item";G.on("click",function(){$(H).is(":hidden")?$(H).show():$(H+":nth-child(n5)").hide()});var J=$(".contact-us-form"),K=$(".contact-us-form-group > input"),Q=$(".contact-us-form-group > textarea");K.each(function(){$(this).keyup(function(){var e=this.getAttribute("type");"text"===e?""==$(this).val().length?$(this).prev("label").text("* please fill this input").css("color","white").removeClass("fa fa-check").toUpperCase:$(this).val().length<3||20<$(this).val().length?$(this).prev("label").text("* user name length must be between 3 and 20").css("color","white").removeClass("fa fa-check").toUpperCase:$(this).prev("label").text("").addClass("fa fa-check").css("color","white").toUpperCase:"email"===e&&(""==$(this).val().length?$(this).prev("label").text("* please fill this input").css("color","white").removeClass("fa fa-check").toUpperCase:"@"==$(this).val().charAt(0)?$(this).prev("label").text("* @ not must be this first input").css("color","white").removeClass("fa fa-check").toUpperCase:this.value.substr(1,this.value.length-4).includes("@")?"."!==$(this).val().charAt($(this).val().length-4)&&"."!==$(this).val().charAt($(this).val().length-3)?$(this).prev("label").text("* . must be character Ex: .com").css("color","white").removeClass("fa fa-check").toUpperCase:$(this).prev("label").text("").css("color","white").addClass("fa fa-check").toUpperCase:$(this).prev("label").text("* @ must be this character").css("color","white").removeClass("fa fa-check").toUpperCase)})}),Q.keyup(function(){""==$(this).val().length?($(this).prev("label").text("*please fill this input").removeClass("fa fa-check").css("color","white").toUpperCase,e.preventDefault()):$(this).prev("label").text("").addClass("fa fa-check").css("color","white")}),J.submit(function(t){K.each(function(){var e=this.getAttribute("type");"text"===e?""==$(this).val().length?($(this).prev("label").text("* please fill this input").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()):$(this).val().length<3||20<$(this).val().length?($(this).prev("label").text("* user name length must be between 3 and 20").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()):$(this).prev("label").text("").addClass("fa fa-check").css("color","white").toUpperCase:"email"===e&&(""==$(this).val().length?($(this).prev("label").text("* please fill this input").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()):"@"==$(this).val().charAt(0)?($(this).prev("label").text("* @ not must be this first input").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()):this.value.substr(1,this.value.length-4).includes("@")?"."!==$(this).val().charAt($(this).val().length-4)&&"."!==$(this).val().charAt($(this).val().length-3)?($(this).prev("label").text("* . must be character Ex: .com").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()):$(this).prev("label").text("").css("color","white").addClass("fa fa-check").toUpperCase:($(this).prev("label").text("* @ must be this character").css("color","white").removeClass("fa fa-check").toUpperCase,t.preventDefault()))}),""==$(Q).val().length?($(Q).prev("label").text("*please fill this input").removeClass("fa fa-check").css("color","white").toUpperCase,t.preventDefault()):$(Q).prev("label").text("").addClass("fa fa-check").css("color","white")});var R=$(".button-top"),W=$(".our-work");$(window).on("scroll",function(){$(window).scrollTop()>W.offset().top?R.is(":hidden")&&(R.fadeIn().css("display","flex"),R.on("click",function(){$("html, body").animate({scrollTop:0},500)})):R.fadeOut()})});var video=document.querySelector(".faq-video"),boxVideo=document.querySelector(".faq-video-box"),btnVideo=document.querySelector("#play-pause"),divControl=document.querySelector(".faq-controls"),btnPlay="faq-control--play",btnPause="faq-control--pause",backColorDivC=divControl.style.backgroundColor;function statusVideo(){video.paused?(video.play(),divControl.style.backgroundColor="transparent"):(video.pause(),divControl.style.backgroundColor=backColorDivC),toggleClass(btnVideo,btnPlay,btnPause),boxVideo.addEventListener("mouseenter",function(){return btnVideo.style.opacity=1}),boxVideo.addEventListener("mouseleave",function(){return video.paused?btnVideo.style.opacity=1:btnVideo.style.opacity=0})}btnVideo.onclick=statusVideo;var toggleClass=function(e,t,a){e.classList.toggle(t),e.classList.toggle(a)},spanYear=document.getElementById("year");spanYear.textContent=(new Date).getFullYear();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
